Traceback (most recent call last):
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/site-packages/nbclient/client.py", line 1085, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/asyncio/base_events.py", line 583, in run_until_complete
    return future.result()
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/site-packages/nbclient/client.py", line 552, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/site-packages/nbclient/client.py", line 846, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/chenyang/miniconda3/envs/ceed/lib/python3.7/site-packages/nbclient/client.py", line 748, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Inference should use the config with parameters that are used in training
# cfg now already contains everything we've set previously. 
# We simply update the weights with the newly trained ones to perform inference:
cfg.MODEL.WEIGHTS = os.path.join(cfg.OUTPUT_DIR, "model_final.pth")  # path to the model we just trained
# set a custom testing threshold
cfg.MODEL.ROI_HEADS.SCORE_THRESH_TEST = 0.15   #@param {type: "slider", min:0.0, max:1.0, step: 0.01}
predictor = DefaultPredictor(cfg)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAssertionError[0m                            Traceback (most recent call last)
[0;32m<ipython-input-20-8cfc9fd45316>[0m in [0;36m<module>[0;34m[0m
[1;32m      5[0m [0;31m# set a custom testing threshold[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m [0mcfg[0m[0;34m.[0m[0mMODEL[0m[0;34m.[0m[0mROI_HEADS[0m[0;34m.[0m[0mSCORE_THRESH_TEST[0m [0;34m=[0m [0;36m0.15[0m   [0;31m#@param {type: "slider", min:0.0, max:1.0, step: 0.01}[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 7[0;31m [0mpredictor[0m [0;34m=[0m [0mDefaultPredictor[0m[0;34m([0m[0mcfg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m~/Desktop/Developer/cpl/annolid/annolid/detectron2/detectron2/engine/defaults.py[0m in [0;36m__init__[0;34m(self, cfg)[0m
[1;32m    291[0m [0;34m[0m[0m
[1;32m    292[0m         [0mcheckpointer[0m [0;34m=[0m [0mDetectionCheckpointer[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mmodel[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 293[0;31m         [0mcheckpointer[0m[0;34m.[0m[0mload[0m[0;34m([0m[0mcfg[0m[0;34m.[0m[0mMODEL[0m[0;34m.[0m[0mWEIGHTS[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    294[0m [0;34m[0m[0m
[1;32m    295[0m         self.aug = T.ResizeShortestEdge(

[0;32m~/Desktop/Developer/cpl/annolid/annolid/detectron2/detectron2/checkpoint/detection_checkpoint.py[0m in [0;36mload[0;34m(self, path, *args, **kwargs)[0m
[1;32m     51[0m             [0;32mif[0m [0;32mnot[0m [0mhas_file[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     52[0m                 [0mpath[0m [0;34m=[0m [0;32mNone[0m  [0;31m# don't load if not readable[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 53[0;31m         [0mret[0m [0;34m=[0m [0msuper[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mload[0m[0;34m([0m[0mpath[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     54[0m [0;34m[0m[0m
[1;32m     55[0m         [0;32mif[0m [0mneed_sync[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/ceed/lib/python3.7/site-packages/fvcore/common/checkpoint.py[0m in [0;36mload[0;34m(self, path, checkpointables)[0m
[1;32m    139[0m         [0;32mif[0m [0;32mnot[0m [0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0misfile[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    140[0m             [0mpath[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpath_manager[0m[0;34m.[0m[0mget_local_path[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 141[0;31m             [0;32massert[0m [0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0misfile[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m,[0m [0;34m"Checkpoint {} not found!"[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    142[0m [0;34m[0m[0m
[1;32m    143[0m         [0mcheckpoint[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_load_file[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mAssertionError[0m: Checkpoint ./output/model_final.pth not found!
AssertionError: Checkpoint ./output/model_final.pth not found!

